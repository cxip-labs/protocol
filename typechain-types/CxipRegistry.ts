/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface CxipRegistryInterface extends utils.Interface {
  contractName: "CxipRegistry";
  functions: {
    "assetProxy()": FunctionFragment;
    "assetSigner()": FunctionFragment;
    "assetSource()": FunctionFragment;
    "copyrightProxy()": FunctionFragment;
    "copyrightSource()": FunctionFragment;
    "customSources(bytes32)": FunctionFragment;
    "erc1155CollectionSource()": FunctionFragment;
    "erc721CollectionSource()": FunctionFragment;
    "getAsset()": FunctionFragment;
    "getAssetSigner()": FunctionFragment;
    "getAssetSource()": FunctionFragment;
    "getCopyright()": FunctionFragment;
    "getCopyrightSource()": FunctionFragment;
    "getCustomSource(bytes32)": FunctionFragment;
    "getCustomSourceFromString(string)": FunctionFragment;
    "getERC1155CollectionSource()": FunctionFragment;
    "getERC721CollectionSource()": FunctionFragment;
    "getIdentitySource()": FunctionFragment;
    "getPA1D()": FunctionFragment;
    "getPA1DSource()": FunctionFragment;
    "getProvenance()": FunctionFragment;
    "getProvenanceSource()": FunctionFragment;
    "identitySource()": FunctionFragment;
    "owner()": FunctionFragment;
    "pa1dProxy()": FunctionFragment;
    "pa1dSource()": FunctionFragment;
    "provenanceProxy()": FunctionFragment;
    "provenanceSource()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setAsset(address)": FunctionFragment;
    "setAssetSigner(address)": FunctionFragment;
    "setAssetSource(address)": FunctionFragment;
    "setCopyright(address)": FunctionFragment;
    "setCopyrightSource(address)": FunctionFragment;
    "setCustomSource(string,address)": FunctionFragment;
    "setERC1155CollectionSource(address)": FunctionFragment;
    "setERC721CollectionSource(address)": FunctionFragment;
    "setIdentitySource(address)": FunctionFragment;
    "setPA1D(address)": FunctionFragment;
    "setPA1DSource(address)": FunctionFragment;
    "setProvenance(address)": FunctionFragment;
    "setProvenanceSource(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "assetProxy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetSigner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "copyrightProxy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "copyrightSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "customSources",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "erc1155CollectionSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "erc721CollectionSource",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getAsset", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getAssetSigner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAssetSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCopyright",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCopyrightSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCustomSource",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getCustomSourceFromString",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC1155CollectionSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721CollectionSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIdentitySource",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getPA1D", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getPA1DSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProvenance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProvenanceSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "identitySource",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "pa1dProxy", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pa1dSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "provenanceProxy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "provenanceSource",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "setAsset", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setAssetSigner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setAssetSource",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCopyright",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCopyrightSource",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCustomSource",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC1155CollectionSource",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721CollectionSource",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setIdentitySource",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setPA1D", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setPA1DSource",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProvenance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProvenanceSource",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "assetProxy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "assetSigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "copyrightProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "copyrightSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "customSources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc1155CollectionSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc721CollectionSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAssetSigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAssetSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCopyright",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCopyrightSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCustomSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCustomSourceFromString",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC1155CollectionSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721CollectionSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIdentitySource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPA1D", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPA1DSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProvenance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProvenanceSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "identitySource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pa1dProxy", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pa1dSource", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "provenanceProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "provenanceSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAssetSigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAssetSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCopyright",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCopyrightSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCustomSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC1155CollectionSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721CollectionSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setIdentitySource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPA1D", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setPA1DSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProvenance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProvenanceSource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface CxipRegistry extends BaseContract {
  contractName: "CxipRegistry";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CxipRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    assetProxy(overrides?: CallOverrides): Promise<[string]>;

    assetSigner(overrides?: CallOverrides): Promise<[string]>;

    assetSource(overrides?: CallOverrides): Promise<[string]>;

    copyrightProxy(overrides?: CallOverrides): Promise<[string]>;

    copyrightSource(overrides?: CallOverrides): Promise<[string]>;

    customSources(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    erc1155CollectionSource(overrides?: CallOverrides): Promise<[string]>;

    erc721CollectionSource(overrides?: CallOverrides): Promise<[string]>;

    getAsset(overrides?: CallOverrides): Promise<[string]>;

    getAssetSigner(overrides?: CallOverrides): Promise<[string]>;

    getAssetSource(overrides?: CallOverrides): Promise<[string]>;

    getCopyright(overrides?: CallOverrides): Promise<[string]>;

    getCopyrightSource(overrides?: CallOverrides): Promise<[string]>;

    getCustomSource(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCustomSourceFromString(
      name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getERC1155CollectionSource(overrides?: CallOverrides): Promise<[string]>;

    getERC721CollectionSource(overrides?: CallOverrides): Promise<[string]>;

    getIdentitySource(overrides?: CallOverrides): Promise<[string]>;

    getPA1D(overrides?: CallOverrides): Promise<[string]>;

    getPA1DSource(overrides?: CallOverrides): Promise<[string]>;

    getProvenance(overrides?: CallOverrides): Promise<[string]>;

    getProvenanceSource(overrides?: CallOverrides): Promise<[string]>;

    identitySource(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pa1dProxy(overrides?: CallOverrides): Promise<[string]>;

    pa1dSource(overrides?: CallOverrides): Promise<[string]>;

    provenanceProxy(overrides?: CallOverrides): Promise<[string]>;

    provenanceSource(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setAsset(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setAssetSigner(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setAssetSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setCopyright(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setCopyrightSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setCustomSource(
      name: string,
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setERC1155CollectionSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setERC721CollectionSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setIdentitySource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPA1D(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPA1DSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProvenance(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProvenanceSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  assetProxy(overrides?: CallOverrides): Promise<string>;

  assetSigner(overrides?: CallOverrides): Promise<string>;

  assetSource(overrides?: CallOverrides): Promise<string>;

  copyrightProxy(overrides?: CallOverrides): Promise<string>;

  copyrightSource(overrides?: CallOverrides): Promise<string>;

  customSources(arg0: BytesLike, overrides?: CallOverrides): Promise<string>;

  erc1155CollectionSource(overrides?: CallOverrides): Promise<string>;

  erc721CollectionSource(overrides?: CallOverrides): Promise<string>;

  getAsset(overrides?: CallOverrides): Promise<string>;

  getAssetSigner(overrides?: CallOverrides): Promise<string>;

  getAssetSource(overrides?: CallOverrides): Promise<string>;

  getCopyright(overrides?: CallOverrides): Promise<string>;

  getCopyrightSource(overrides?: CallOverrides): Promise<string>;

  getCustomSource(name: BytesLike, overrides?: CallOverrides): Promise<string>;

  getCustomSourceFromString(
    name: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getERC1155CollectionSource(overrides?: CallOverrides): Promise<string>;

  getERC721CollectionSource(overrides?: CallOverrides): Promise<string>;

  getIdentitySource(overrides?: CallOverrides): Promise<string>;

  getPA1D(overrides?: CallOverrides): Promise<string>;

  getPA1DSource(overrides?: CallOverrides): Promise<string>;

  getProvenance(overrides?: CallOverrides): Promise<string>;

  getProvenanceSource(overrides?: CallOverrides): Promise<string>;

  identitySource(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  pa1dProxy(overrides?: CallOverrides): Promise<string>;

  pa1dSource(overrides?: CallOverrides): Promise<string>;

  provenanceProxy(overrides?: CallOverrides): Promise<string>;

  provenanceSource(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setAsset(
    proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setAssetSigner(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setAssetSource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setCopyright(
    proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setCopyrightSource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setCustomSource(
    name: string,
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setERC1155CollectionSource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setERC721CollectionSource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setIdentitySource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPA1D(
    proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPA1DSource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProvenance(
    proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProvenanceSource(
    source: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    assetProxy(overrides?: CallOverrides): Promise<string>;

    assetSigner(overrides?: CallOverrides): Promise<string>;

    assetSource(overrides?: CallOverrides): Promise<string>;

    copyrightProxy(overrides?: CallOverrides): Promise<string>;

    copyrightSource(overrides?: CallOverrides): Promise<string>;

    customSources(arg0: BytesLike, overrides?: CallOverrides): Promise<string>;

    erc1155CollectionSource(overrides?: CallOverrides): Promise<string>;

    erc721CollectionSource(overrides?: CallOverrides): Promise<string>;

    getAsset(overrides?: CallOverrides): Promise<string>;

    getAssetSigner(overrides?: CallOverrides): Promise<string>;

    getAssetSource(overrides?: CallOverrides): Promise<string>;

    getCopyright(overrides?: CallOverrides): Promise<string>;

    getCopyrightSource(overrides?: CallOverrides): Promise<string>;

    getCustomSource(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getCustomSourceFromString(
      name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getERC1155CollectionSource(overrides?: CallOverrides): Promise<string>;

    getERC721CollectionSource(overrides?: CallOverrides): Promise<string>;

    getIdentitySource(overrides?: CallOverrides): Promise<string>;

    getPA1D(overrides?: CallOverrides): Promise<string>;

    getPA1DSource(overrides?: CallOverrides): Promise<string>;

    getProvenance(overrides?: CallOverrides): Promise<string>;

    getProvenanceSource(overrides?: CallOverrides): Promise<string>;

    identitySource(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    pa1dProxy(overrides?: CallOverrides): Promise<string>;

    pa1dSource(overrides?: CallOverrides): Promise<string>;

    provenanceProxy(overrides?: CallOverrides): Promise<string>;

    provenanceSource(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setAsset(proxy: string, overrides?: CallOverrides): Promise<void>;

    setAssetSigner(source: string, overrides?: CallOverrides): Promise<void>;

    setAssetSource(source: string, overrides?: CallOverrides): Promise<void>;

    setCopyright(proxy: string, overrides?: CallOverrides): Promise<void>;

    setCopyrightSource(
      source: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setCustomSource(
      name: string,
      source: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setERC1155CollectionSource(
      source: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setERC721CollectionSource(
      source: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setIdentitySource(source: string, overrides?: CallOverrides): Promise<void>;

    setPA1D(proxy: string, overrides?: CallOverrides): Promise<void>;

    setPA1DSource(source: string, overrides?: CallOverrides): Promise<void>;

    setProvenance(proxy: string, overrides?: CallOverrides): Promise<void>;

    setProvenanceSource(
      source: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    assetProxy(overrides?: CallOverrides): Promise<BigNumber>;

    assetSigner(overrides?: CallOverrides): Promise<BigNumber>;

    assetSource(overrides?: CallOverrides): Promise<BigNumber>;

    copyrightProxy(overrides?: CallOverrides): Promise<BigNumber>;

    copyrightSource(overrides?: CallOverrides): Promise<BigNumber>;

    customSources(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    erc1155CollectionSource(overrides?: CallOverrides): Promise<BigNumber>;

    erc721CollectionSource(overrides?: CallOverrides): Promise<BigNumber>;

    getAsset(overrides?: CallOverrides): Promise<BigNumber>;

    getAssetSigner(overrides?: CallOverrides): Promise<BigNumber>;

    getAssetSource(overrides?: CallOverrides): Promise<BigNumber>;

    getCopyright(overrides?: CallOverrides): Promise<BigNumber>;

    getCopyrightSource(overrides?: CallOverrides): Promise<BigNumber>;

    getCustomSource(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCustomSourceFromString(
      name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC1155CollectionSource(overrides?: CallOverrides): Promise<BigNumber>;

    getERC721CollectionSource(overrides?: CallOverrides): Promise<BigNumber>;

    getIdentitySource(overrides?: CallOverrides): Promise<BigNumber>;

    getPA1D(overrides?: CallOverrides): Promise<BigNumber>;

    getPA1DSource(overrides?: CallOverrides): Promise<BigNumber>;

    getProvenance(overrides?: CallOverrides): Promise<BigNumber>;

    getProvenanceSource(overrides?: CallOverrides): Promise<BigNumber>;

    identitySource(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pa1dProxy(overrides?: CallOverrides): Promise<BigNumber>;

    pa1dSource(overrides?: CallOverrides): Promise<BigNumber>;

    provenanceProxy(overrides?: CallOverrides): Promise<BigNumber>;

    provenanceSource(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setAsset(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setAssetSigner(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setAssetSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setCopyright(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setCopyrightSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setCustomSource(
      name: string,
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setERC1155CollectionSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setERC721CollectionSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setIdentitySource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPA1D(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPA1DSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProvenance(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProvenanceSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    assetProxy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetSigner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetSource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    copyrightProxy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    copyrightSource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    customSources(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    erc1155CollectionSource(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    erc721CollectionSource(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAsset(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAssetSigner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAssetSource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getCopyright(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getCopyrightSource(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCustomSource(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCustomSourceFromString(
      name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC1155CollectionSource(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC721CollectionSource(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIdentitySource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPA1D(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPA1DSource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProvenance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProvenanceSource(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    identitySource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pa1dProxy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pa1dSource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    provenanceProxy(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    provenanceSource(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setAsset(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setAssetSigner(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setAssetSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setCopyright(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setCopyrightSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setCustomSource(
      name: string,
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setERC1155CollectionSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setERC721CollectionSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setIdentitySource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPA1D(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPA1DSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProvenance(
      proxy: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProvenanceSource(
      source: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
