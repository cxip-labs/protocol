/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CxipERC721, CxipERC721Interface } from "../CxipERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "PermanentURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "arweaveURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "payloadHash",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
            ],
            internalType: "struct Verification",
            name: "payloadSignature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "arweave",
            type: "bytes32",
          },
          {
            internalType: "bytes11",
            name: "arweave2",
            type: "bytes11",
          },
          {
            internalType: "bytes32",
            name: "ipfs",
            type: "bytes32",
          },
          {
            internalType: "bytes14",
            name: "ipfs2",
            type: "bytes14",
          },
        ],
        internalType: "struct TokenData",
        name: "tokenData",
        type: "tuple",
      },
    ],
    name: "cxipMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIdentity",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "httpURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "name2",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "royalties",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "bps",
            type: "uint96",
          },
        ],
        internalType: "struct CollectionData",
        name: "collectionData",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ipfsURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "payloadHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "payloadSignature",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Verification",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "payloadSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newName2",
        type: "bytes32",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newSymbol",
        type: "bytes32",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "verifySHA256",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120d9806100206000396000f3fe6080604052600436106101bd5760003560e01c8063510b5158116100ed578063a546993e11610090578063a546993e1461056f578063ab67aa581461058f578063b0cacd43146105a2578063b88d4fde1461058f578063c87b56dd1461056f578063e8a3d485146105c2578063e985e9c5146105d7578063f2fde38b146105f7578063f95bb91e14610617576101cc565b8063510b51581461021657806351e32024146104b25780636352211e146104d25780636c0360eb146104f25780638da5cb5b146105075780638f32d59b1461052557806395d89b411461053a578063a22cb4651461054f576101cc565b80631a5c7f92116101605780631a5c7f921461034c57806323b872dd1461036c5780632c2dadbc1461037f57806336afc6fa1461041057806342842e0e1461036c57806342966c6814610425578063475a80351461044557806349e65440146104725780634f8baacc14610492576101cc565b806301ffc9a7146101e157806306ce0db81461021657806306fdde031461025c578063081812fc1461027e578063095ea7b3146102b4578063128bfa25146102d4578063150b7a02146102f457806318160ddd1461032d576101cc565b366101cc576101ca610637565b005b3480156101d857600080fd5b506101ca610637565b3480156101ed57600080fd5b506102016101fc3660046117b8565b6106da565b60405190151581526020015b60405180910390f35b34801561022257600080fd5b5061024f6102313660046117e2565b6000908152600c60205260409020600401546001600160a01b031690565b60405161020d91906117fb565b34801561026857600080fd5b50610271610859565b60405161020d919061183b565b34801561028a57600080fd5b5061024f6102993660046117e2565b6000908152600860205260409020546001600160a01b031690565b3480156102c057600080fd5b506101ca6102cf366004611883565b610899565b3480156102e057600080fd5b506101ca6102ef3660046118af565b61092b565b34801561030057600080fd5b5061032061030f366004611939565b630a85bd0160e11b95945050505050565b60405161020d91906119ac565b34801561033957600080fd5b50600f545b60405190815260200161020d565b34801561035857600080fd5b506102716103673660046117e2565b610a78565b6101ca61037a3660046119c1565b610af4565b34801561038b57600080fd5b506103eb61039a3660046117e2565b604080516060808201835260008083526020808401829052928401819052938452600c82529282902082519384018352600181015484526002810154918401919091526003015460ff169082015290565b6040805182518152602080840151908201529181015160ff169082015260600161020d565b34801561041c57600080fd5b5061024f610b0f565b34801561043157600080fd5b506101ca6104403660046117e2565b610bfe565b34801561045157600080fd5b5061033e6104603660046117e2565b6000908152600c602052604090205490565b34801561047e57600080fd5b506101ca61048d3660046117e2565b610d10565b34801561049e57600080fd5b5061033e6104ad366004611a02565b610d39565b3480156104be57600080fd5b506102716104cd3660046117e2565b610e29565b3480156104de57600080fd5b5061024f6104ed3660046117e2565b610e4d565b3480156104fe57600080fd5b50610271610ec1565b34801561051357600080fd5b50600e546001600160a01b031661024f565b34801561053157600080fd5b50610201610edc565b34801561054657600080fd5b50610271610f11565b34801561055b57600080fd5b506101ca61056a366004611a3c565b610f21565b34801561057b57600080fd5b5061027161058a3660046117e2565b610fa9565b6101ca61059d366004611a8b565b610fdc565b3480156105ae57600080fd5b506102016105bd366004611b6b565b610ffc565b3480156105ce57600080fd5b5061027161105c565b3480156105e357600080fd5b506102016105f2366004611bb7565b611077565b34801561060357600080fd5b506101ca610612366004611be5565b611164565b34801561062357600080fd5b506101ca610632366004611c02565b6111b5565b600073e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b03166381d1779c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190611c24565b90503660008037600080366000845af43d6000803e8080156106d0573d6000f35b3d6000fd5b505050565b60006301ffc9a760e01b6001600160e01b03198316148061070b57506380ac58cd60e01b6001600160e01b03198316145b806107265750635b5e139f60e01b6001600160e01b03198316145b806107415750630a85bd0160e11b6001600160e01b03198316145b8061075c575063e8a3d48560e01b6001600160e01b03198316145b80610844575073e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b03166381d1779c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190611c24565b6001600160a01b03166301ffc9a7836040518263ffffffff1660e01b815260040161080391906119ac565b602060405180830381865afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108449190611c41565b1561085157506001919050565b506000919050565b606061086860008001546111e4565b600154610874906111e4565b604051602001610885929190611c5e565b604051602081830303815290604052905090565b6000818152600760205260409020546001600160a01b0390811690831681148015906108ca57506108ca3383611248565b156106d55760008281526008602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600d54610940906001600160a01b03166112af565b61098d5760405162461bcd60e51b815260206004820152601960248201527810d612540e88185b1c9958591e481a5b9a5d1a585b1a5e9959603a1b60448201526064015b60405180910390fd5b600d80546001600160a01b03199081163317909155600e8054909116301790558060006109ba8282611ccf565b5030905063ea2299f860006109d56080850160608601611be5565b6109e560a0860160808701611d34565b6040516001600160e01b031960e086901b16815260048101939093526001600160a01b0390911660248301526001600160601b03166044820152606401600060405180830381600087803b158015610a3c57600080fd5b505af1158015610a50573d6000803e3d6000fd5b5050600e80546001600160a01b0319166001600160a01b039590951694909417909355505050565b6000818152600c602090815260409182902060078101546008909101549251606093610ade9360909190911b91017468747470733a2f2f697066732e696f2f697066732f60581b815260158101929092526001600160901b031916603582015260430190565b6040516020818303038152906040529050919050565b6106d583838360405180602001604052806000815250610fdc565b600073e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b879190611c24565b600e546040516309633f5960e31b81526001600160a01b0392831692634b19fac892610bb8929116906004016117fb565b602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190611c24565b905090565b610c083382611248565b15610d0d576000818152600760205260409020546001600160a01b0316610c2e816112af565b15610c3857600080fd5b610c41826112bc565b60008281526007602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020612084833981519152908390a46001600f6000828254610c939190611d67565b9091555050506000818152600c60205260408120818155600181018290556002810182905560038101805460ff191690556004810180546001600160a01b0319169055600581018290556006810180546affffffffffffffffffffff19169055600781019190915560080180546001600160701b03191690555b50565b610d18610edc565b610d345760405162461bcd60e51b815260040161098490611d7e565b600255565b6000610d43610edc565b610d5f5760405162461bcd60e51b815260040161098490611d7e565b82610d8257600160046000828254610d779190611db1565b909155505060045492505b610d9b610d9560a0840160808501611be5565b846112da565b6000838152600c602052604090208290610db58282611e06565b508390507fa109ba539900bf1b633f956d63c96fc89b814c7287f7aa50a9216d0b5565720760a0840135610def60e0860160c08701611eca565b604051602001610e00929190611ee7565b60408051601f1981840301815290829052610e1a9161183b565b60405180910390a25090919050565b6060610e33610ec1565b610e3c8361135e565b604051602001610ade929190611f1e565b6000818152600760205260408120546001600160a01b0316610e6e816112af565b15610ebb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20646f6573206e6f74206578697374000000006044820152606401610984565b92915050565b6060610ecc306113b2565b6040516020016108859190611f5a565b600e546000906001600160a01b0316331480610f025750600d546001600160a01b031633145b80610bf95750610bf9336113c6565b6060610bf96000600201546111e4565b6001600160a01b0382163314610f9d57336000818152600b602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fa5611f96565b5050565b6000818152600c602090815260409182902060058101546006909101549251606093610ade9360a89190911b9101611ee7565b610fe63383611248565b15610ff657610ff6848484611457565b50505050565b60008060028484604051611011929190611fac565b602060405180830381855afa15801561102e573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906110519190611fbc565b909414949350505050565b6060611067306113b2565b6040516020016108859190611fd5565b6001600160a01b038083166000908152600b6020908152604080832093851683529290529081205460ff16806110c95750734fee7b061c97c9c496b01dbce9cdb10c02f0a0be6001600160a01b038316145b8061115d575060405163c455279160e01b81526001600160a01b0383169073a5409ec958c83c3f309868babaca7c86dcb077c19063c4552791906111119087906004016117fb565b602060405180830381865afa15801561112e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111529190611c24565b6001600160a01b0316145b9392505050565b61116c610edc565b6111885760405162461bcd60e51b815260040161098490611d7e565b611191816112af565b610d0d57600e80546001600160a01b0383166001600160a01b031990911617905550565b6111bd610edc565b6111d95760405162461bcd60e51b815260040161098490611d7e565b600091909155600155565b60608160005b811561120957806111fa8161201c565b915050600882901c91506111ea565b6112408460405160200161121f91815260200190565b60408051601f1981840301815291905261123a836020611d67565b836114e6565b949350505050565b6000611253826115f3565b61125c57600080fd5b6000828152600760205260409020546001600160a01b0390811690841681148061129f57506000838152600860205260409020546001600160a01b038581169116145b8061124057506112408185611077565b6001600160a01b03161590565b600090815260086020526040902080546001600160a01b0319169055565b6112e3826112af565b806112f257506112f2816115f3565b156112ff576112ff611f96565b60008181526007602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020612084833981519152908290a46001600f60008282546113559190611db1565b90915550505050565b6060816113855750506040805180820190915260048152630307830360e41b602082015290565b8160005b81156113a857806113998161201c565b915050600882901c9150611389565b611240848261161c565b6060610ebb826001600160a01b031661135e565b6000806113d1610b0f565b90506113dc816112af565b156113ea5750600092915050565b604051637f247e4960e01b81526001600160a01b03821690637f247e49906114169086906004016117fb565b602060405180830381865afa158015611433573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115d9190611c41565b6000818152600760205260409020546001600160a01b0384811691161480156114865750611484826112af565b155b156114de57611494816112bc565b60008181526007602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061208483398151915291a4505050565b6106d5611f96565b6060816114f481601f611db1565b10156115335760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610984565b61153d8284611db1565b845110156115815760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610984565b6060821580156115a057604051915060008252602082016040526115ea565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156115d95780518352602092830192016115c1565b5050858452601f01601f1916604052505b50949350505050565b6000818152600760205260408120546001600160a01b0316611614816112af565b159392505050565b6060600061162b836002612037565b611636906002611db1565b67ffffffffffffffff81111561164e5761164e611a75565b6040519080825280601f01601f191660200182016040528015611678576020820181803683370190505b509050600360fc1b8160008151811061169357611693612056565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106116c2576116c2612056565b60200101906001600160f81b031916908160001a90535060006116e6846002612037565b6116f1906001611db1565b90505b6001811115611769576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061172557611725612056565b1a60f81b82828151811061173b5761173b612056565b60200101906001600160f81b031916908160001a90535060049490941c936117628161206c565b90506116f4565b50831561115d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610984565b6000602082840312156117ca57600080fd5b81356001600160e01b03198116811461115d57600080fd5b6000602082840312156117f457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60005b8381101561182a578181015183820152602001611812565b83811115610ff65750506000910152565b602081526000825180602084015261185a81604085016020870161180f565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610d0d57600080fd5b6000806040838503121561189657600080fd5b82356118a18161186e565b946020939093013593505050565b60008082840360c08112156118c357600080fd5b83356118ce8161186e565b925060a0601f19820112156118e257600080fd5b506020830190509250929050565b60008083601f84011261190257600080fd5b50813567ffffffffffffffff81111561191a57600080fd5b60208301915083602082850101111561193257600080fd5b9250929050565b60008060008060006080868803121561195157600080fd5b853561195c8161186e565b9450602086013561196c8161186e565b935060408601359250606086013567ffffffffffffffff81111561198f57600080fd5b61199b888289016118f0565b969995985093965092949392505050565b6001600160e01b031991909116815260200190565b6000806000606084860312156119d657600080fd5b83356119e18161186e565b925060208401356119f18161186e565b929592945050506040919091013590565b600080828403610140811215611a1757600080fd5b83359250610120601f19820112156118e257600080fd5b8015158114610d0d57600080fd5b60008060408385031215611a4f57600080fd5b8235611a5a8161186e565b91506020830135611a6a81611a2e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611aa157600080fd5b8435611aac8161186e565b93506020850135611abc8161186e565b925060408501359150606085013567ffffffffffffffff80821115611ae057600080fd5b818701915087601f830112611af457600080fd5b813581811115611b0657611b06611a75565b604051601f8201601f19908116603f01168101908382118183101715611b2e57611b2e611a75565b816040528281528a6020848701011115611b4757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060408486031215611b8057600080fd5b83359250602084013567ffffffffffffffff811115611b9e57600080fd5b611baa868287016118f0565b9497909650939450505050565b60008060408385031215611bca57600080fd5b8235611bd58161186e565b91506020830135611a6a8161186e565b600060208284031215611bf757600080fd5b813561115d8161186e565b60008060408385031215611c1557600080fd5b50508035926020909101359150565b600060208284031215611c3657600080fd5b815161115d8161186e565b600060208284031215611c5357600080fd5b815161115d81611a2e565b60008351611c7081846020880161180f565b835190830190611c8481836020880161180f565b01949350505050565b60008135610ebb8161186e565b80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160601b0381168114610d0d57600080fd5b813581556020820135600182015560408201356002820155600381016060830135611cf98161186e565b611d038183611c9a565b506080830135611d1281611cba565b81546001600160a01b031660a09190911b6001600160a01b0319161790555050565b600060208284031215611d4657600080fd5b813561115d81611cba565b634e487b7160e01b600052601160045260246000fd5b600082821015611d7957611d79611d51565b500390565b60208082526019908201527821ac24a81d1031b0b63632b9103737ba1030b71037bbb732b960391b604082015260600190565b60008219821115611dc457611dc4611d51565b500190565b6001600160a81b031981168114610d0d57600080fd5b60008135610ebb81611dc9565b600081356001600160901b031981168114610ebb57600080fd5b81358155602082013560018201556040820135600282015560038101606083013560ff8116808214611e3757600080fd5b825460ff19161790915550611e5a611e5160808401611c8d565b60048301611c9a565b60a08201356005820155611e92611e7360c08401611ddf565b600683018160a81c6affffffffffffffffffffff198254161781555050565b60e08201356007820155610fa5611eac6101008401611dec565b6008830180546001600160701b03191660909290921c919091179055565b600060208284031215611edc57600080fd5b813561115d81611dc9565b7368747470733a2f2f617277656176652e6e65742f60601b815260148101929092526001600160a81b0319166034820152603f0190565b60008351611f3081846020880161180f565b602f60f81b9083019081528351611f4e81600184016020880161180f565b01600101949350505050565b7368747470733a2f2f637869702e696f2f6e66742f60601b815260008251611f8981601485016020870161180f565b9190910160140192915050565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b600060208284031215611fce57600080fd5b5051919050565b7368747470733a2f2f6e66742e637869702e696f2f60601b81526000825161200481601485016020870161180f565b602f60f81b6014939091019283015250601501919050565b600060001982141561203057612030611d51565b5060010190565b600081600019048311821515161561205157612051611d51565b500290565b634e487b7160e01b600052603260045260246000fd5b60008161207b5761207b611d51565b50600019019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201d2fff4f70760969b1b751c41105a3d940d912681554cae495db5fbdc0e3513564736f6c634300080c0033";

type CxipERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CxipERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CxipERC721__factory extends ContractFactory {
  constructor(...args: CxipERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CxipERC721";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CxipERC721> {
    return super.deploy(overrides || {}) as Promise<CxipERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CxipERC721 {
    return super.attach(address) as CxipERC721;
  }
  connect(signer: Signer): CxipERC721__factory {
    return super.connect(signer) as CxipERC721__factory;
  }
  static readonly contractName: "CxipERC721";
  public readonly contractName: "CxipERC721";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CxipERC721Interface {
    return new utils.Interface(_abi) as CxipERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CxipERC721 {
    return new Contract(address, _abi, signerOrProvider) as CxipERC721;
  }
}
