/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RaribleRoyalties,
  RaribleRoyaltiesInterface,
} from "../RaribleRoyalties";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "royaltiesProviders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "setProviderByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317815561017d90819061003390396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063d836f0131461006f578063f39cc706146100ad575b600080fd5b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100ab61007d3660046100f2565b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b005b6100536100bb366004610125565b6001602052600090815260409020546001600160a01b031681565b80356001600160a01b03811681146100ed57600080fd5b919050565b6000806040838503121561010557600080fd5b61010e836100d6565b915061011c602084016100d6565b90509250929050565b60006020828403121561013757600080fd5b610140826100d6565b939250505056fea2646970667358221220ca1b3824309675abf52dcb0fbf1efa3792a609bbdb5306b46c2f89fe57f351b664736f6c634300080c0033";

type RaribleRoyaltiesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaribleRoyaltiesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RaribleRoyalties__factory extends ContractFactory {
  constructor(...args: RaribleRoyaltiesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RaribleRoyalties";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RaribleRoyalties> {
    return super.deploy(overrides || {}) as Promise<RaribleRoyalties>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RaribleRoyalties {
    return super.attach(address) as RaribleRoyalties;
  }
  connect(signer: Signer): RaribleRoyalties__factory {
    return super.connect(signer) as RaribleRoyalties__factory;
  }
  static readonly contractName: "RaribleRoyalties";
  public readonly contractName: "RaribleRoyalties";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaribleRoyaltiesInterface {
    return new utils.Interface(_abi) as RaribleRoyaltiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RaribleRoyalties {
    return new Contract(address, _abi, signerOrProvider) as RaribleRoyalties;
  }
}
