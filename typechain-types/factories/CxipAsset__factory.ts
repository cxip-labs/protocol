/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CxipAsset, CxipAssetInterface } from "../CxipAsset";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "identityAddress",
        type: "address",
      },
    ],
    name: "CollectionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "identityAddress",
        type: "address",
      },
    ],
    name: "CollectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "identityAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "identityAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bool",
        name: "fresh",
        type: "bool",
      },
    ],
    name: "AddCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fresh",
        type: "bool",
      },
    ],
    name: "AddToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultUriType",
    outputs: [
      {
        internalType: "enum UriType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "getCollectionIdentity",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "getCollectionType",
    outputs: [
      {
        internalType: "enum InterfaceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "isCollectionCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "isCollectionOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "isCollectionRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isTokenCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isTokenRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506000805460ff19169055610eeb8061002a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063699ec11311610066578063699ec1131461012a57806388e7e7661461013d578063c3386c8114610150578063dbdd85a314610170578063eb6538e91461018357600080fd5b806310cd8d34146100a35780631555d26f146100cc57806327f63b05146100e15780632b09f45614610104578063455114a314610117575b600080fd5b6100b66100b1366004610c4f565b610196565b6040516100c39190610c6c565b60405180910390f35b6100df6100da366004610c8e565b6101a9565b005b6100f46100ef366004610c4f565b610538565b60405190151581526020016100c3565b6100f4610112366004610c4f565b6105ca565b60005460ff166040516100c39190610cef565b6100df610138366004610d09565b61061b565b6100f461014b366004610c4f565b610a34565b61016361015e366004610c4f565b610a85565b6040516100c39190610d5c565b6100f461017e366004610d70565b610b26565b6100f4610191366004610d70565b610bc5565b6000806101a283610c19565b9392505050565b3373dfbb74177c45c82ac06327c204bb5ef2daec57b86001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102209190610d9c565b6001600160a01b0316630172e60e826040518263ffffffff1660e01b815260040161024b9190610c6c565b602060405180830381865afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610db9565b6102b15760405162461bcd60e51b81526004016102a890610dd6565b60405180910390fd5b604051637f247e4960e01b815281906001600160a01b03821690637f247e49906102df908890600401610c6c565b602060405180830381865afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103209190610db9565b61033c5760405162461bcd60e51b81526004016102a890610e0d565b6040516327f63b0560e01b81526001600160a01b038216906327f63b0590610368908790600401610c6c565b602060405180830381865afa158015610385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a99190610db9565b6103c55760405162461bcd60e51b81526004016102a890610e44565b600083156104c457816001600160a01b031663fe75154b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190610db9565b61047b5760405162461bcd60e51b815260206004820152601a60248201527f435849503a206e6f742061206e657720636f6c6c656374696f6e00000000000060448201526064016102a8565b60019050856001600160a01b0316856001600160a01b03167f5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c760405160405180910390a3610505565b856001600160a01b0316856001600160a01b03167fde026c5319b7c35f108a6ccfc922edc8008522079b610aee3c676bb7b7b7fb3560405160405180910390a35b50506001600160a01b03928316600090815260016020526040902080546001600160a01b03191691909316179091555050565b60008061054483610c19565b90506001600160a01b03811661055d5750600092915050565b6040516327f63b0560e01b81526001600160a01b038216906327f63b0590610589908690600401610c6c565b602060405180830381865afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a29190610db9565b6000806105d683610c19565b90506001600160a01b0381166105ef5750600092915050565b604051631584fa2b60e11b81526001600160a01b03821690632b09f45690610589908690600401610c6c565b3373dfbb74177c45c82ac06327c204bb5ef2daec57b86001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610d9c565b6001600160a01b0316630172e60e826040518263ffffffff1660e01b81526004016106bd9190610c6c565b602060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe9190610db9565b61071a5760405162461bcd60e51b81526004016102a890610dd6565b604051637f247e4960e01b815281906001600160a01b03821690637f247e4990610748908990600401610c6c565b602060405180830381865afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107899190610db9565b6107a55760405162461bcd60e51b81526004016102a890610e0d565b6040516327f63b0560e01b81526001600160a01b038216906327f63b05906107d1908890600401610c6c565b602060405180830381865afa1580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190610db9565b61082e5760405162461bcd60e51b81526004016102a890610e44565b60405163eb6538e960e01b81526001600160a01b0382169063eb6538e99061085c9088908890600401610e7b565b602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610db9565b6108e95760405162461bcd60e51b815260206004820152601a60248201527f435849503a206e6f74207265676973746572656420746f6b656e00000000000060448201526064016102a8565b600083156109e957816001600160a01b031663fe75154b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109539190610db9565b61099f5760405162461bcd60e51b815260206004820181905260248201527f435849503a206e6f742061206e657720636f6c6c656374696f6e20746f6b656e60448201526064016102a8565b6001905084876001600160a01b0316876001600160a01b03167ffde888083b38fe6deac8498d5daebda0d38d0d3e6167e434b633f955152766fa60405160405180910390a4610a2b565b84876001600160a01b0316876001600160a01b03167f7156d0b8d9ed8d1117b97d76a15a304bad2749fc23251c2c7ed65a069895285060405160405180910390a45b50505050505050565b600080610a4083610c19565b90506001600160a01b038116610a595750600092915050565b604051634473f3b360e11b81526001600160a01b038216906388e7e76690610589908690600401610c6c565b600080610a9183610c19565b90506001600160a01b038116610ab95760405162461bcd60e51b81526004016102a890610e44565b60405163c3386c8160e01b81526001600160a01b0382169063c3386c8190610ae5908690600401610c6c565b602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a29190610e94565b600080610b3284610c19565b90506001600160a01b038116610b4c576000915050610bbf565b60405163dbdd85a360e01b81526001600160a01b0382169063dbdd85a390610b7a9087908790600401610e7b565b602060405180830381865afa158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190610db9565b9150505b92915050565b600080610bd184610c19565b90506001600160a01b038116610beb576000915050610bbf565b60405163eb6538e960e01b81526001600160a01b0382169063eb6538e990610b7a9087908790600401610e7b565b6001600160a01b039081166000908152600160205260409020541690565b6001600160a01b0381168114610c4c57600080fd5b50565b600060208284031215610c6157600080fd5b81356101a281610c37565b6001600160a01b0391909116815260200190565b8015158114610c4c57600080fd5b600080600060608486031215610ca357600080fd5b8335610cae81610c37565b92506020840135610cbe81610c37565b91506040840135610cce81610c80565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610d0357610d03610cd9565b91905290565b60008060008060808587031215610d1f57600080fd5b8435610d2a81610c37565b93506020850135610d3a81610c37565b9250604085013591506060850135610d5181610c80565b939692955090935050565b6020810160048310610d0357610d03610cd9565b60008060408385031215610d8357600080fd5b8235610d8e81610c37565b946020939093013593505050565b600060208284031215610dae57600080fd5b81516101a281610c37565b600060208284031215610dcb57600080fd5b81516101a281610c80565b6020808252601f908201527f435849503a20696e76616c6964204964656e7469747920636f6e747261637400604082015260600190565b6020808252601e908201527f435849503a2063726561746f722077616c6c6574206e6f74206f776e65720000604082015260600190565b6020808252601f908201527f435849503a206e6f74207265676973746572656420636f6c6c656374696f6e00604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215610ea657600080fd5b8151600481106101a257600080fdfea26469706673582212204776582af84e8f53f5eea5f0ec83e18574ffa13b0e62f4ac074bbc3d096aa6dc64736f6c634300080c0033";

type CxipAssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CxipAssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CxipAsset__factory extends ContractFactory {
  constructor(...args: CxipAssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CxipAsset";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CxipAsset> {
    return super.deploy(overrides || {}) as Promise<CxipAsset>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CxipAsset {
    return super.attach(address) as CxipAsset;
  }
  connect(signer: Signer): CxipAsset__factory {
    return super.connect(signer) as CxipAsset__factory;
  }
  static readonly contractName: "CxipAsset";
  public readonly contractName: "CxipAsset";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CxipAssetInterface {
    return new utils.Interface(_abi) as CxipAssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CxipAsset {
    return new Contract(address, _abi, signerOrProvider) as CxipAsset;
  }
}
