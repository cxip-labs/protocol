/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CxipIdentity, CxipIdentityInterface } from "../CxipIdentity";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "addSignedWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "addWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saltHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "collectionCreator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Verification",
        name: "verification",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "name2",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "royalties",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "bps",
            type: "uint96",
          },
        ],
        internalType: "struct CollectionData",
        name: "collectionData",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "createCustomERC721Collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saltHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "collectionCreator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Verification",
        name: "verification",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "name2",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "royalties",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "bps",
            type: "uint96",
          },
        ],
        internalType: "struct CollectionData",
        name: "collectionData",
        type: "tuple",
      },
    ],
    name: "createERC721Collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "payloadHash",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
            ],
            internalType: "struct Verification",
            name: "payloadSignature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "arweave",
            type: "bytes32",
          },
          {
            internalType: "bytes11",
            name: "arweave2",
            type: "bytes11",
          },
          {
            internalType: "bytes32",
            name: "ipfs",
            type: "bytes32",
          },
          {
            internalType: "bytes14",
            name: "ipfs2",
            type: "bytes14",
          },
        ],
        internalType: "struct TokenData",
        name: "tokenData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Verification",
        name: "verification",
        type: "tuple",
      },
    ],
    name: "createERC721Token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCollectionById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "getCollectionType",
    outputs: [
      {
        internalType: "enum InterfaceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "secondaryWallet",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "isCollectionCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isCollectionOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "isCollectionRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isNew",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isTokenCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isTokenRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "isWalletRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "listCollections",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCollections",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600755612249806100256000396000f3fe6080604052600436106101395760003560e01c806388e7e766116100ab578063dbdd85a31161006f578063dbdd85a31461038e578063e547cb85146103ae578063eb6538e91461038e578063efeb5f1f146103ce578063f09a4016146103ee578063fe75154b1461040e57610148565b806388e7e766146101dd5780638f32d59b146102f1578063c3386c8114610306578063c4c36e651461034c578063db7a46051461037957610148565b80632d66f063116100fd5780632d66f0631461022e578063379d4f26146102435780634da465ff1461026357806361d9db2d14610283578063757df8fd146102985780637f247e49146102d157610148565b80630cd55abf1461015d57806312eb7bd51461019057806327c0056a146101b057806327f63b05146101dd5780632b09f4561461020d57610148565b3661014857610146610426565b005b34801561015457600080fd5b50610146610426565b34801561016957600080fd5b5061017d6101783660046118c5565b6104c4565b6040519081526020015b60405180910390f35b34801561019c57600080fd5b5061017d6101ab3660046118fa565b6104ef565b3480156101bc57600080fd5b506101d06101cb366004611981565b6107ba565b6040516101879190611a7d565b3480156101e957600080fd5b506101fd6101f83660046118c5565b610a99565b6040519015158152602001610187565b34801561021957600080fd5b506101fd6102283660046118c5565b50600090565b34801561023a57600080fd5b50610146610aaa565b34801561024f57600080fd5b5061014661025e366004611aa7565b610da6565b34801561026f57600080fd5b506101d061027e366004611aeb565b6110d9565b34801561028f57600080fd5b5060025461017d565b3480156102a457600080fd5b506101d06102b33660046118c5565b6001600160a01b039081166000908152600360205260409020541690565b3480156102dd57600080fd5b506101fd6102ec3660046118c5565b611237565b3480156102fd57600080fd5b506101fd611242565b34801561031257600080fd5b5061033f6103213660046118c5565b6001600160a01b031660009081526006602052604090205460ff1690565b6040516101879190611b48565b34801561035857600080fd5b5061036c610367366004611b70565b611252565b6040516101879190611b92565b34801561038557600080fd5b5061036c611354565b34801561039a57600080fd5b506101fd6103a9366004611bdf565b6113b6565b3480156103ba57600080fd5b506101d06103c9366004611c0b565b6113c2565b3480156103da57600080fd5b506101466103e93660046118c5565b6113f2565b3480156103fa57600080fd5b50610146610409366004611c24565b611402565b34801561041a57600080fd5b5060005460ff166101fd565b600073e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b03166381d1779c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190611c5d565b90503660008037600080366000845af43d6000803e8080156104bf573d6000f35b3d6000fd5b6001600160a01b0381166000908152600460205260408120546104e8816001611c90565b9392505050565b60006007546002141561051d5760405162461bcd60e51b815260040161051490611ca8565b60405180910390fd5b600260075561052b336114a0565b6105475760405162461bcd60e51b815260040161051490611cdf565b61055f61055a60a08501608086016118c5565b6114a0565b61057b5760405162461bcd60e51b815260040161051490611d16565b60026001600160a01b03861660009081526006602052604090205460ff1660038111156105aa576105aa611b32565b146105f75760405162461bcd60e51b815260206004820152601b60248201527f435849503a20636f6c6c656374696f6e206e6f742045524337323100000000006044820152606401610514565b60003061060a60a08601608087016118c5565b87878735602089013560408a013561062860808c0160608d01611d47565b60a08c013561063d60e08e0160c08f01611d7a565b8d60e001358e6101000160208101906106569190611dad565b6040516020016106719c9b9a99989796959493929190611dc8565b604051602081830303815290604052905061071e6106a073e7f1725e7734ce288f8367e1bb143e90bb3f051290565b6001600160a01b031663d5d644ad6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107019190611c5d565b843560208601356107186060880160408901611d47565b856114ed565b61073a5760405162461bcd60e51b815260040161051490611e67565b6040516313e2eab360e21b81526001600160a01b03871690634f8baacc906107689088908890600401611e98565b6020604051808303816000875af1158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab9190611f4a565b60016007559695505050505050565b6000600754600214156107df5760405162461bcd60e51b815260040161051490611ca8565b60026007556001600160a01b03861633146108d4576108b8868635602088013561080f60608a0160408b01611d47565b308b8a600001358b602001358c604001358d606001602081019061083391906118c5565b8e60800160208101906108469190611f7a565b604051606097881b6001600160601b0319908116602083015296881b8716603482015260488101959095526068850193909352608884019190915290931b90911660a882015260a09190911b6001600160a01b03191660bc82015260c8016040516020818303038152906040526114ed565b6108d45760405162461bcd60e51b815260040161051490611e67565b6108dd866114a0565b6108f95760405162461bcd60e51b815260040161051490611d16565b6000878351602085016000f560405163b305cff960e01b81526004810186905290915073e7f1725e7734ce288f8367e1bb143e90bb3f05129063b305cff990602401602060405180830381865afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190611c5d565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c80519060200120816001600160a01b0316803b806020016040519081016040528181526000908060200190933c8051906020012014610a1e5760405162461bcd60e51b8152602060048201526019602482015278086b092a07440c4f2e8ca40c6dec8ca40dad2e6e6dac2e8c6d603b1b6044820152606401610514565b60405163128bfa2560e01b81526001600160a01b0382169063128bfa2590610a4c908a908990600401611f95565b600060405180830381600087803b158015610a6657600080fd5b505af1158015610a7a573d6000803e3d6000fd5b50505050610a8981600261172e565b6001600755979650505050505050565b6000610aa4826117ac565b92915050565b60075460021415610acd5760405162461bcd60e51b815260040161051490611ca8565b6002600755336000818152600360205260409020546001600160a01b031680610b385760405162461bcd60e51b815260206004820152601d60248201527f435849503a206e6f7420617574686f72697a6564206279206f776e65720000006044820152606401610514565b610b41816114a0565b610b8d5760405162461bcd60e51b815260206004820181905260248201527f435849503a20617574686f72697a6572206e6f206c6f6e676572206f776e65726044820152606401610514565b610c7f73e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190611c5d565b6001600160a01b0316634b19fac8846040518263ffffffff1660e01b8152600401610c319190611a7d565b602060405180830381865afa158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c729190611c5d565b6001600160a01b03161590565b610c9b5760405162461bcd60e51b815260040161051490611ffd565b610ca4826117e4565b73e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a9190611c5d565b6001600160a01b031663e327f60b836040518263ffffffff1660e01b8152600401610d459190611a7d565b600060405180830381600087803b158015610d5f57600080fd5b505af1158015610d73573d6000803e3d6000fd5b5050506001600160a01b03909216600090815260036020526040902080546001600160a01b031916905550506001600755565b60075460021415610dc95760405162461bcd60e51b815260040161051490611ca8565b6002600755610dd7336114a0565b610df35760405162461bcd60e51b815260040161051490611cdf565b610dfc84611840565b15610e495760405162461bcd60e51b815260206004820152601a60248201527f435849503a20636f6e7472616374206e6f7420616c6c6f7765640000000000006044820152606401610514565b610eed73e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec29190611c5d565b6001600160a01b0316634b19fac8866040518263ffffffff1660e01b8152600401610c319190611a7d565b610f095760405162461bcd60e51b815260040161051490611ffd565b8115801590610f1757508015155b8015610f25575060ff831615155b156110a5576000610f35856104c4565b6040516001600160601b031930606090811b8216602084015288901b1660348201526048810182905290915060009060680160405160208183030381529060405290506000610f8787868689866114ed565b905080610fa65760405162461bcd60e51b815260040161051490611e67565b6001600160a01b0387166000908152600460205260409020839055610fca876117e4565b73e7f1725e7734ce288f8367e1bb143e90bb3f05126001600160a01b031663b9da967d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110409190611c5d565b6001600160a01b031663e327f60b886040518263ffffffff1660e01b815260040161106b9190611a7d565b600060405180830381600087803b15801561108557600080fd5b505af1158015611099573d6000803e3d6000fd5b505050505050506110ce565b6001600160a01b038416600090815260036020526040902080546001600160a01b031916331790555b505060016007555050565b6000600754600214156110fe5760405162461bcd60e51b815260040161051490611ca8565b60026007556001600160a01b03841633146111785761115c848435602086013561112e6060880160408901611d47565b3089883560208a013560408b013561114c60808d0160608e016118c5565b61084660a08e0160808f01611f7a565b6111785760405162461bcd60e51b815260040161051490611e67565b611181846114a0565b61119d5760405162461bcd60e51b815260040161051490611d16565b600060405180610180016040528061014881526020016120cc610148913990506000868251602084016000f560405163128bfa2560e01b81529091506001600160a01b0382169063128bfa25906111fa9089908890600401611f95565b600060405180830381600087803b15801561121457600080fd5b505af1158015611228573d6000803e3d6000fd5b505050506107ab81600261172e565b6000610aa4826114a0565b600061124d33611237565b905090565b606060006112608385611c90565b60025490915081111561127257506002545b600061127e8583612034565b67ffffffffffffffff8111156112965761129661196b565b6040519080825280602002602001820160405280156112bf578160200160208202803683370190505b5090506000855b8381101561134957600281815481106112e1576112e161204b565b9060005260206000200160009054906101000a90046001600160a01b03168383815181106113115761131161204b565b6001600160a01b03909216602092830291909101909101528161133381612061565b925050808061134190612061565b9150506112c6565b509095945050505050565b606060018054806020026020016040519081016040528092919081815260200182805480156113ac57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161138e575b5050505050905090565b60006104e88383611877565b6000600282815481106113d7576113d761204b565b6000918252602090912001546001600160a01b031692915050565b6113ff8160008080610da6565b50565b600754600214156114255760405162461bcd60e51b815260040161051490611ca8565b6002600755600154156114765760405162461bcd60e51b815260206004820152601960248201527810d612540e88185b1c9958591e481a5b9a5d1a585b1a5e9959603a1b6044820152606401610514565b61147f826117e4565b6001600160a01b0381161561149757611497816117e4565b50506001600755565b6001600160a01b0381166000818152600560205260408120546001805492939290919081106114d1576114d161204b565b6000918252602090912001546001600160a01b03161492915050565b6000806000835160201415611615576020840151915060018286898960405160008152602001604052604051611526949392919061207c565b6020604051602081039080840390855afa158015611548573d6000803e3d6000fd5b505050602060405103519050806001600160a01b0316886001600160a01b0316141561157957600192505050611725565b60018260405160200161158c919061209a565b60405160208183030381529060405280519060200120868989604051600081526020016040526040516115c2949392919061207c565b6020604051602081039080840390855afa1580156115e4573d6000803e3d6000fd5b505050602060405103519050806001600160a01b0316886001600160a01b0316141561161557600192505050611725565b600084805190602001209050600181878a8a60405160008152602001604052604051611644949392919061207c565b6020604051602081039080840390855afa158015611666573d6000803e3d6000fd5b505050602060405103519150816001600160a01b0316896001600160a01b031614156116985760019350505050611725565b806040516020016116a9919061209a565b604051602081830303815290604052805190602001209050600181878a8a604051600081526020016040526040516116e4949392919061207c565b6020604051602081039080840390855afa158015611706573d6000803e3d6000fd5b5050604051601f1901516001600160a01b038b81169116149450505050505b95945050505050565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b03851690811790915560009081526006602052604090208054839260ff19909116908360038111156117a3576117a3611b32565b02179055505050565b6000806001600160a01b03831660009081526006602052604090205460ff1660038111156117dc576117dc611b32565b141592915050565b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180546001600160a01b039093166001600160a01b03199093168317905560009182526005602052604090912055565b6000813f80158015906104e857507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470141592915050565b6000806001600160a01b03841660009081526006602052604090205460ff1660038111156118a7576118a7611b32565b14159392505050565b6001600160a01b03811681146113ff57600080fd5b6000602082840312156118d757600080fd5b81356104e8816118b0565b6000606082840312156118f457600080fd5b50919050565b6000806000808486036101c081121561191257600080fd5b853561191d816118b0565b945060208601359350610120603f198201121561193957600080fd5b5060408501915061194e8661016087016118e2565b905092959194509250565b600060a082840312156118f457600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080600080610180878903121561199b57600080fd5b8635955060208701356119ad816118b0565b94506119bc88604089016118e2565b93506119cb8860a08901611959565b9250610140870135915061016087013567ffffffffffffffff808211156119f157600080fd5b818901915089601f830112611a0557600080fd5b813581811115611a1757611a1761196b565b604051601f8201601f19908116603f01168101908382118183101715611a3f57611a3f61196b565b816040528281528c6020848701011115611a5857600080fd5b8260208601602083013760006020848301015280955050505050509295509295509295565b6001600160a01b0391909116815260200190565b803560ff81168114611aa257600080fd5b919050565b60008060008060808587031215611abd57600080fd5b8435611ac8816118b0565b9350611ad660208601611a91565b93969395505050506040820135916060013590565b6000806000806101408587031215611b0257600080fd5b843593506020850135611b14816118b0565b9250611b2386604087016118e2565b915061194e8660a08701611959565b634e487b7160e01b600052602160045260246000fd5b6020810160048310611b6a57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215611b8357600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015611bd35783516001600160a01b031683529284019291840191600101611bae565b50909695505050505050565b60008060408385031215611bf257600080fd5b8235611bfd816118b0565b946020939093013593505050565b600060208284031215611c1d57600080fd5b5035919050565b60008060408385031215611c3757600080fd5b8235611c42816118b0565b91506020830135611c52816118b0565b809150509250929050565b600060208284031215611c6f57600080fd5b81516104e8816118b0565b634e487b7160e01b600052601160045260246000fd5b60008219821115611ca357611ca3611c7a565b500190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601e908201527f435849503a20796f7520617265206e6f7420616e20746865206f776e65720000604082015260600190565b60208082526017908201527621ac24a81d1031b932b0ba37b9103737ba1037bbb732b960491b604082015260600190565b600060208284031215611d5957600080fd5b6104e882611a91565b80356001600160a81b031981168114611aa257600080fd5b600060208284031215611d8c57600080fd5b6104e882611d62565b80356001600160901b031981168114611aa257600080fd5b600060208284031215611dbf57600080fd5b6104e882611d95565b60006001600160601b0319808f60601b168352808e60601b166014840152808d60601b166028840152508a603c83015289605c83015288607c83015287609c83015260ff60f81b8760f81b1660bc8301528560bd830152611e3560dd8301866001600160a81b0319169052565b8360e8830152611e526101088301846001600160901b0319169052565b50610116019c9b505050505050505050505050565b602080825260179082015276435849503a20696e76616c6964207369676e617475726560481b604082015260600190565b60006101408201905083825282356020830152602083013560408301526040830135606083015260ff611ecd60608501611a91565b1660808301526080830135611ee1816118b0565b6001600160a01b03811660a08401525060a083013560c0830152611f0760c08401611d62565b6001600160a81b0319811660e08401525061010060e084013581840152611f2f818501611d95565b6001600160901b031981166101208501529050509392505050565b600060208284031215611f5c57600080fd5b5051919050565b80356001600160601b0381168114611aa257600080fd5b600060208284031215611f8c57600080fd5b6104e882611f63565b600060c08201905060018060a01b0380851683528335602084015260208401356040840152604084013560608401526060840135611fd2816118b0565b818116608085015250506001600160601b03611ff060808501611f63565b1660a08301529392505050565b6020808252601f908201527f435849503a2077616c6c657420616c7265616479207265676973746572656400604082015260600190565b60008282101561204657612046611c7a565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561207557612075611c7a565b5060010190565b93845260ff9290921660208401526040830152606082015260800190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c019056fe608060405234801561001057600080fd5b50610128806100206000396000f3fe608060408190527f58bfd99600000000000000000000000000000000000000000000000000000000815260009073c267d41f81308d7773ecb3bdd863a902acc01ade906358bfd9969060849060209060048186803b158015605f57600080fd5b505afa1580156072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906094919060b9565b90503660008037600080366000845af43d6000803e80801560b4573d6000f35b3d6000fd5b60006020828403121560c9578081fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811460eb578182fd5b939250505056fea2646970667358221220e40db164da39a10669859af903c7c9d1a96e3a2e162855f6b00aa89d483e4c6164736f6c63430008040033a2646970667358221220278f9ad29a4469112e10600e0702a764a041645667c5b25e3188422ad2969e4364736f6c634300080c0033";

type CxipIdentityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CxipIdentityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CxipIdentity__factory extends ContractFactory {
  constructor(...args: CxipIdentityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CxipIdentity";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CxipIdentity> {
    return super.deploy(overrides || {}) as Promise<CxipIdentity>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CxipIdentity {
    return super.attach(address) as CxipIdentity;
  }
  connect(signer: Signer): CxipIdentity__factory {
    return super.connect(signer) as CxipIdentity__factory;
  }
  static readonly contractName: "CxipIdentity";
  public readonly contractName: "CxipIdentity";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CxipIdentityInterface {
    return new utils.Interface(_abi) as CxipIdentityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CxipIdentity {
    return new Contract(address, _abi, signerOrProvider) as CxipIdentity;
  }
}
